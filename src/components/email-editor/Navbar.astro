---
import ExportInIcon from "../../../public/icons/export.svg";
import ExportMinify from "../../../public/icons/export-minify.svg";
import DarkIcon from "../../../public/icons/dark.svg";
import SavetIcon from "../../../public/icons/save.svg";
import HomeIcon from "../../../public/icons/home.svg";
import ImportIcon from "../../../public/icons/import.svg";

const pages = [
  {
    id: "home",
    label: "Home",
    text: "Inicio",
    iconButton: HomeIcon.src,
    name: "",
    enabled: true,
  },
  {
    id: "export-button",
    label: "Exportar HTML",
    text: "ExporHTML",
    iconButton: ExportInIcon.src,
    name: "",
    enabled: true,
  },
  {
    id: "export-button-minify",
    label: "Exportar HTML minificado",
    text: "ExporHTML",
    iconButton: ExportMinify.src,
    name: "",
    enabled: true,
  },
  // {
  //   id: "darkModeButton",
  //   label: "Modo Oscuro",
  //   text: "DarkMode",
  //   iconButton: DarkIcon.src,
  //   name: "textDarkMode",
  // },
  {
    id: "save-button",
    label: "Guardar Json",
    text: "Save JSON",
    iconButton: SavetIcon.src,
    name: "",
    enabled: true,
  },
  {
    id: "import-button",
    label: "Importar Json",
    text: "Save JSON",
    iconButton: ImportIcon.src,
    name: "",
    enabled: false,
  },
];
---

<nav class="bg-white border-gray-20relative">
  <div class="flex flex-wrap items-center justify-between mx-auto p-4">
    <a
      href="https://flowbite.com/"
      class="flex items-center space-x-3 rtl:space-x-reverse"
    >
      <img src="./logo.png" class="h-8" alt="Flowbite Logo" />
    </a>
    <div
      class="flex items-center md:order-2 space-x-1 md:space-x-0 rtl:space-x-reverse"
    >
      <button
        type="button"
        data-dropdown-toggle="language-dropdown-menu"
        class="inline-flex items-center font-medium justify-center gap-1 px-4 py-2 text-sm text-gray-900 dark:text-gray-900 rounded-lg cursor-pointer"
      >
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
        <path stroke-linecap="round" stroke-linejoin="round" d="M7.5 7.5h-.75A2.25 2.25 0 0 0 4.5 9.75v7.5a2.25 2.25 0 0 0 2.25 2.25h7.5a2.25 2.25 0 0 0 2.25-2.25v-7.5a2.25 2.25 0 0 0-2.25-2.25h-.75m-6 3.75 3 3m0 0 3-3m-3 3V1.5m6 9h.75a2.25 2.25 0 0 1 2.25 2.25v7.5a2.25 2.25 0 0 1-2.25 2.25h-7.5a2.25 2.25 0 0 1-2.25-2.25v-.75" />
      </svg>
      
        Exportar
      </button>
      <!-- Dropdown -->
      <div
        class="z-50 hidden my-4 text-base list-none bg-white divide-y divide-gray-100 rounded-lg shadow dark:bg-gray-950 right-4 top-10 absolute"
        id="language-dropdown-menu"
      >
        <ul class="py-2 font-medium" role="none">
          {
            pages.map(({ id, label, text, iconButton, name, enabled}, key) => (
              <li>
                <a
                  id={id}
                  class={`block px-4 py-2 text-sm text-gray-700 ${enabled ? 'hover:bg-gray-100' : 'cursor-not-allowed opacity-50'} dark:text-gray-400 dark:hover:bg-gray-600 dark:hover:text-white`}
                  role="menuitem"
                  aria-disabled={!enabled}
                >
                  <div class="inline-flex items-center">
                    <img
                      class="rounded-full me-2 h-5 w-5"
                      src={iconButton}
                      alt="Logo SVG"
                    />

                    {label}
                  </div>
                </a>
              </li>
            ))
          }
          
        </ul>
      </div>
      
    </div>
  </div>
</nav>

<script is:inline>
  // Selecciona el botón y el menú del dropdown
  const dropdownToggle = document.querySelector(
    '[data-dropdown-toggle="language-dropdown-menu"]'
  );
  const dropdownMenu = document.getElementById("language-dropdown-menu");

  // Agrega el evento de clic al botón
  dropdownToggle.addEventListener("click", function () {
    // Alterna la visibilidad del menú
    dropdownMenu.classList.toggle("hidden");
  });

  // Cierra el menú si se hace clic fuera de él
  document.addEventListener("click", function (event) {
    if (
      !dropdownToggle.contains(event.target) &&
      !dropdownMenu.contains(event.target)
    ) {
      dropdownMenu.classList.add("hidden");
    }
  });
</script>
